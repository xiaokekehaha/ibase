<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wzk.mvc.dao.MyOpenballInfoMapper">
  <resultMap id="BaseResultMap" type="com.wzk.mvc.model.MyOpenballInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="expect" jdbcType="BIGINT" property="expect" />
    <result column="opendate" jdbcType="BIGINT" property="opendate" />
    <result column="opencode" jdbcType="VARCHAR" property="opencode" />
    <result column="firstcode" jdbcType="INTEGER" property="firstcode" />
    <result column="secondcode" jdbcType="INTEGER" property="secondcode" />
    <result column="thirdcode" jdbcType="INTEGER" property="thirdcode" />
    <result column="fourthcode" jdbcType="INTEGER" property="fourthcode" />
    <result column="lastcode" jdbcType="INTEGER" property="lastcode" />
    <result column="last_odd_gap" jdbcType="INTEGER" property="lastOddGap" />
    <result column="last_even_gap" jdbcType="INTEGER" property="lastEvenGap" />
    <result column="last_big_gap" jdbcType="INTEGER" property="lastBigGap" />
    <result column="last_small_gap" jdbcType="INTEGER" property="lastSmallGap" />
    <result column="last_prime_gap" jdbcType="INTEGER" property="lastPrimeGap" />
    <result column="last_composite_gap" jdbcType="INTEGER" property="lastCompositeGap" />
    <result column="last_even_odd_gap" jdbcType="INTEGER" property="lastEvenOddGap" />
    <result column="last_big_small_gap" jdbcType="INTEGER" property="lastBigSmallGap" />
    <result column="fourth_odd_gap" jdbcType="INTEGER" property="fourthOddGap" />
    <result column="fourth_even_gap" jdbcType="INTEGER" property="fourthEvenGap" />
    <result column="fourth_big_gap" jdbcType="INTEGER" property="fourthBigGap" />
    <result column="fourth_small_gap" jdbcType="INTEGER" property="fourthSmallGap" />
    <result column="fourth_prime_gap" jdbcType="INTEGER" property="fourthPrimeGap" />
    <result column="fourth_composite_gap" jdbcType="INTEGER" property="fourthCompositeGap" />
    <result column="fourth_even_odd_gap" jdbcType="INTEGER" property="fourthEvenOddGap" />
    <result column="fourth_big_small_gap" jdbcType="INTEGER" property="fourthBigSmallGap" />
    <result column="big_big_gap" jdbcType="INTEGER" property="bigBigGap" />
    <result column="big_small_gap" jdbcType="INTEGER" property="bigSmallGap" />
    <result column="big_odd_gap" jdbcType="INTEGER" property="bigOddGap" />
    <result column="big_even_gap" jdbcType="INTEGER" property="bigEvenGap" />
    <result column="small_big_gap" jdbcType="INTEGER" property="smallBigGap" />
    <result column="small_small_gap" jdbcType="INTEGER" property="smallSmallGap" />
    <result column="small_odd_gap" jdbcType="INTEGER" property="smallOddGap" />
    <result column="small_even_gap" jdbcType="INTEGER" property="smallEvenGap" />
    <result column="odd_big_gap" jdbcType="INTEGER" property="oddBigGap" />
    <result column="odd_small_gap" jdbcType="INTEGER" property="oddSmallGap" />
    <result column="odd_odd_gap" jdbcType="INTEGER" property="oddOddGap" />
    <result column="odd_even_gap" jdbcType="INTEGER" property="oddEvenGap" />
    <result column="even_big_gap" jdbcType="INTEGER" property="evenBigGap" />
    <result column="even_small_gap" jdbcType="INTEGER" property="evenSmallGap" />
    <result column="even_odd_gap" jdbcType="INTEGER" property="evenOddGap" />
    <result column="even_even_gap" jdbcType="INTEGER" property="evenEvenGap" />
    <result column="last_zero_gap" jdbcType="INTEGER" property="lastZeroGap" />
    <result column="last_one_gap" jdbcType="INTEGER" property="lastOneGap" />
    <result column="last_two_gap" jdbcType="INTEGER" property="lastTwoGap" />
    <result column="last_three_gap" jdbcType="INTEGER" property="lastThreeGap" />
    <result column="last_four_gap" jdbcType="INTEGER" property="lastFourGap" />
    <result column="last_five_gap" jdbcType="INTEGER" property="lastFiveGap" />
    <result column="last_six_gap" jdbcType="INTEGER" property="lastSixGap" />
    <result column="last_seven_gap" jdbcType="INTEGER" property="lastSevenGap" />
    <result column="last_eight_gap" jdbcType="INTEGER" property="lastEightGap" />
    <result column="last_nine_gap" jdbcType="INTEGER" property="lastNineGap" />
    <result column="span_nine_gap" jdbcType="INTEGER" property="spanNineGap" />
    <result column="road_zero_gap" jdbcType="INTEGER" property="roadZeroGap" />
    <result column="road_one_gap" jdbcType="INTEGER" property="roadOneGap" />
    <result column="road_two_gap" jdbcType="INTEGER" property="roadTwoGap" />
    <result column="zero_zero_gap" jdbcType="INTEGER" property="zeroZeroGap" />
    <result column="one_one_gap" jdbcType="INTEGER" property="oneOneGap" />
    <result column="two_two_gap" jdbcType="INTEGER" property="twoTwoGap" />
    <result column="three_three_gap" jdbcType="INTEGER" property="threeThreeGap" />
    <result column="four_four_gap" jdbcType="INTEGER" property="fourFourGap" />
    <result column="five_five_gap" jdbcType="INTEGER" property="fiveFiveGap" />
    <result column="six_six_gap" jdbcType="INTEGER" property="sixSixGap" />
    <result column="seven_seven_gap" jdbcType="INTEGER" property="sevenSevenGap" />
    <result column="eight_eight_gap" jdbcType="INTEGER" property="eightEightGap" />
    <result column="nine_nine_gap" jdbcType="INTEGER" property="nineNineGap" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, expect, opendate, opencode, firstcode, secondcode, thirdcode, fourthcode, lastcode, 
    last_odd_gap, last_even_gap, last_big_gap, last_small_gap, last_prime_gap, last_composite_gap, 
    last_even_odd_gap, last_big_small_gap, fourth_odd_gap, fourth_even_gap, fourth_big_gap, 
    fourth_small_gap, fourth_prime_gap, fourth_composite_gap, fourth_even_odd_gap, fourth_big_small_gap, 
    big_big_gap, big_small_gap, big_odd_gap, big_even_gap, small_big_gap, small_small_gap, 
    small_odd_gap, small_even_gap, odd_big_gap, odd_small_gap, odd_odd_gap, odd_even_gap, 
    even_big_gap, even_small_gap, even_odd_gap, even_even_gap, last_zero_gap, last_one_gap, 
    last_two_gap, last_three_gap, last_four_gap, last_five_gap, last_six_gap, last_seven_gap, 
    last_eight_gap, last_nine_gap, span_nine_gap, road_zero_gap, road_one_gap, road_two_gap, 
    zero_zero_gap, one_one_gap, two_two_gap, three_three_gap, four_four_gap, five_five_gap, 
    six_six_gap, seven_seven_gap, eight_eight_gap, nine_nine_gap, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from my_openball_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from my_openball_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wzk.mvc.model.MyOpenballInfo">
    insert into my_openball_info (id, expect, opendate, 
      opencode, firstcode, secondcode, 
      thirdcode, fourthcode, lastcode, 
      last_odd_gap, last_even_gap, last_big_gap, 
      last_small_gap, last_prime_gap, last_composite_gap, 
      last_even_odd_gap, last_big_small_gap, fourth_odd_gap, 
      fourth_even_gap, fourth_big_gap, fourth_small_gap, 
      fourth_prime_gap, fourth_composite_gap, fourth_even_odd_gap, 
      fourth_big_small_gap, big_big_gap, big_small_gap, 
      big_odd_gap, big_even_gap, small_big_gap, 
      small_small_gap, small_odd_gap, small_even_gap, 
      odd_big_gap, odd_small_gap, odd_odd_gap, 
      odd_even_gap, even_big_gap, even_small_gap, 
      even_odd_gap, even_even_gap, last_zero_gap, 
      last_one_gap, last_two_gap, last_three_gap, 
      last_four_gap, last_five_gap, last_six_gap, 
      last_seven_gap, last_eight_gap, last_nine_gap, 
      span_nine_gap, road_zero_gap, road_one_gap, 
      road_two_gap, zero_zero_gap, one_one_gap, 
      two_two_gap, three_three_gap, four_four_gap, 
      five_five_gap, six_six_gap, seven_seven_gap, 
      eight_eight_gap, nine_nine_gap, create_time, 
      modify_time)
    values (#{id,jdbcType=BIGINT}, #{expect,jdbcType=BIGINT}, #{opendate,jdbcType=BIGINT}, 
      #{opencode,jdbcType=VARCHAR}, #{firstcode,jdbcType=INTEGER}, #{secondcode,jdbcType=INTEGER}, 
      #{thirdcode,jdbcType=INTEGER}, #{fourthcode,jdbcType=INTEGER}, #{lastcode,jdbcType=INTEGER}, 
      #{lastOddGap,jdbcType=INTEGER}, #{lastEvenGap,jdbcType=INTEGER}, #{lastBigGap,jdbcType=INTEGER}, 
      #{lastSmallGap,jdbcType=INTEGER}, #{lastPrimeGap,jdbcType=INTEGER}, #{lastCompositeGap,jdbcType=INTEGER}, 
      #{lastEvenOddGap,jdbcType=INTEGER}, #{lastBigSmallGap,jdbcType=INTEGER}, #{fourthOddGap,jdbcType=INTEGER}, 
      #{fourthEvenGap,jdbcType=INTEGER}, #{fourthBigGap,jdbcType=INTEGER}, #{fourthSmallGap,jdbcType=INTEGER}, 
      #{fourthPrimeGap,jdbcType=INTEGER}, #{fourthCompositeGap,jdbcType=INTEGER}, #{fourthEvenOddGap,jdbcType=INTEGER}, 
      #{fourthBigSmallGap,jdbcType=INTEGER}, #{bigBigGap,jdbcType=INTEGER}, #{bigSmallGap,jdbcType=INTEGER}, 
      #{bigOddGap,jdbcType=INTEGER}, #{bigEvenGap,jdbcType=INTEGER}, #{smallBigGap,jdbcType=INTEGER}, 
      #{smallSmallGap,jdbcType=INTEGER}, #{smallOddGap,jdbcType=INTEGER}, #{smallEvenGap,jdbcType=INTEGER}, 
      #{oddBigGap,jdbcType=INTEGER}, #{oddSmallGap,jdbcType=INTEGER}, #{oddOddGap,jdbcType=INTEGER}, 
      #{oddEvenGap,jdbcType=INTEGER}, #{evenBigGap,jdbcType=INTEGER}, #{evenSmallGap,jdbcType=INTEGER}, 
      #{evenOddGap,jdbcType=INTEGER}, #{evenEvenGap,jdbcType=INTEGER}, #{lastZeroGap,jdbcType=INTEGER}, 
      #{lastOneGap,jdbcType=INTEGER}, #{lastTwoGap,jdbcType=INTEGER}, #{lastThreeGap,jdbcType=INTEGER}, 
      #{lastFourGap,jdbcType=INTEGER}, #{lastFiveGap,jdbcType=INTEGER}, #{lastSixGap,jdbcType=INTEGER}, 
      #{lastSevenGap,jdbcType=INTEGER}, #{lastEightGap,jdbcType=INTEGER}, #{lastNineGap,jdbcType=INTEGER}, 
      #{spanNineGap,jdbcType=INTEGER}, #{roadZeroGap,jdbcType=INTEGER}, #{roadOneGap,jdbcType=INTEGER}, 
      #{roadTwoGap,jdbcType=INTEGER}, #{zeroZeroGap,jdbcType=INTEGER}, #{oneOneGap,jdbcType=INTEGER}, 
      #{twoTwoGap,jdbcType=INTEGER}, #{threeThreeGap,jdbcType=INTEGER}, #{fourFourGap,jdbcType=INTEGER}, 
      #{fiveFiveGap,jdbcType=INTEGER}, #{sixSixGap,jdbcType=INTEGER}, #{sevenSevenGap,jdbcType=INTEGER}, 
      #{eightEightGap,jdbcType=INTEGER}, #{nineNineGap,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.wzk.mvc.model.MyOpenballInfo">
    insert into my_openball_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="expect != null">
        expect,
      </if>
      <if test="opendate != null">
        opendate,
      </if>
      <if test="opencode != null">
        opencode,
      </if>
      <if test="firstcode != null">
        firstcode,
      </if>
      <if test="secondcode != null">
        secondcode,
      </if>
      <if test="thirdcode != null">
        thirdcode,
      </if>
      <if test="fourthcode != null">
        fourthcode,
      </if>
      <if test="lastcode != null">
        lastcode,
      </if>
      <if test="lastOddGap != null">
        last_odd_gap,
      </if>
      <if test="lastEvenGap != null">
        last_even_gap,
      </if>
      <if test="lastBigGap != null">
        last_big_gap,
      </if>
      <if test="lastSmallGap != null">
        last_small_gap,
      </if>
      <if test="lastPrimeGap != null">
        last_prime_gap,
      </if>
      <if test="lastCompositeGap != null">
        last_composite_gap,
      </if>
      <if test="lastEvenOddGap != null">
        last_even_odd_gap,
      </if>
      <if test="lastBigSmallGap != null">
        last_big_small_gap,
      </if>
      <if test="fourthOddGap != null">
        fourth_odd_gap,
      </if>
      <if test="fourthEvenGap != null">
        fourth_even_gap,
      </if>
      <if test="fourthBigGap != null">
        fourth_big_gap,
      </if>
      <if test="fourthSmallGap != null">
        fourth_small_gap,
      </if>
      <if test="fourthPrimeGap != null">
        fourth_prime_gap,
      </if>
      <if test="fourthCompositeGap != null">
        fourth_composite_gap,
      </if>
      <if test="fourthEvenOddGap != null">
        fourth_even_odd_gap,
      </if>
      <if test="fourthBigSmallGap != null">
        fourth_big_small_gap,
      </if>
      <if test="bigBigGap != null">
        big_big_gap,
      </if>
      <if test="bigSmallGap != null">
        big_small_gap,
      </if>
      <if test="bigOddGap != null">
        big_odd_gap,
      </if>
      <if test="bigEvenGap != null">
        big_even_gap,
      </if>
      <if test="smallBigGap != null">
        small_big_gap,
      </if>
      <if test="smallSmallGap != null">
        small_small_gap,
      </if>
      <if test="smallOddGap != null">
        small_odd_gap,
      </if>
      <if test="smallEvenGap != null">
        small_even_gap,
      </if>
      <if test="oddBigGap != null">
        odd_big_gap,
      </if>
      <if test="oddSmallGap != null">
        odd_small_gap,
      </if>
      <if test="oddOddGap != null">
        odd_odd_gap,
      </if>
      <if test="oddEvenGap != null">
        odd_even_gap,
      </if>
      <if test="evenBigGap != null">
        even_big_gap,
      </if>
      <if test="evenSmallGap != null">
        even_small_gap,
      </if>
      <if test="evenOddGap != null">
        even_odd_gap,
      </if>
      <if test="evenEvenGap != null">
        even_even_gap,
      </if>
      <if test="lastZeroGap != null">
        last_zero_gap,
      </if>
      <if test="lastOneGap != null">
        last_one_gap,
      </if>
      <if test="lastTwoGap != null">
        last_two_gap,
      </if>
      <if test="lastThreeGap != null">
        last_three_gap,
      </if>
      <if test="lastFourGap != null">
        last_four_gap,
      </if>
      <if test="lastFiveGap != null">
        last_five_gap,
      </if>
      <if test="lastSixGap != null">
        last_six_gap,
      </if>
      <if test="lastSevenGap != null">
        last_seven_gap,
      </if>
      <if test="lastEightGap != null">
        last_eight_gap,
      </if>
      <if test="lastNineGap != null">
        last_nine_gap,
      </if>
      <if test="spanNineGap != null">
        span_nine_gap,
      </if>
      <if test="roadZeroGap != null">
        road_zero_gap,
      </if>
      <if test="roadOneGap != null">
        road_one_gap,
      </if>
      <if test="roadTwoGap != null">
        road_two_gap,
      </if>
      <if test="zeroZeroGap != null">
        zero_zero_gap,
      </if>
      <if test="oneOneGap != null">
        one_one_gap,
      </if>
      <if test="twoTwoGap != null">
        two_two_gap,
      </if>
      <if test="threeThreeGap != null">
        three_three_gap,
      </if>
      <if test="fourFourGap != null">
        four_four_gap,
      </if>
      <if test="fiveFiveGap != null">
        five_five_gap,
      </if>
      <if test="sixSixGap != null">
        six_six_gap,
      </if>
      <if test="sevenSevenGap != null">
        seven_seven_gap,
      </if>
      <if test="eightEightGap != null">
        eight_eight_gap,
      </if>
      <if test="nineNineGap != null">
        nine_nine_gap,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="expect != null">
        #{expect,jdbcType=BIGINT},
      </if>
      <if test="opendate != null">
        #{opendate,jdbcType=BIGINT},
      </if>
      <if test="opencode != null">
        #{opencode,jdbcType=VARCHAR},
      </if>
      <if test="firstcode != null">
        #{firstcode,jdbcType=INTEGER},
      </if>
      <if test="secondcode != null">
        #{secondcode,jdbcType=INTEGER},
      </if>
      <if test="thirdcode != null">
        #{thirdcode,jdbcType=INTEGER},
      </if>
      <if test="fourthcode != null">
        #{fourthcode,jdbcType=INTEGER},
      </if>
      <if test="lastcode != null">
        #{lastcode,jdbcType=INTEGER},
      </if>
      <if test="lastOddGap != null">
        #{lastOddGap,jdbcType=INTEGER},
      </if>
      <if test="lastEvenGap != null">
        #{lastEvenGap,jdbcType=INTEGER},
      </if>
      <if test="lastBigGap != null">
        #{lastBigGap,jdbcType=INTEGER},
      </if>
      <if test="lastSmallGap != null">
        #{lastSmallGap,jdbcType=INTEGER},
      </if>
      <if test="lastPrimeGap != null">
        #{lastPrimeGap,jdbcType=INTEGER},
      </if>
      <if test="lastCompositeGap != null">
        #{lastCompositeGap,jdbcType=INTEGER},
      </if>
      <if test="lastEvenOddGap != null">
        #{lastEvenOddGap,jdbcType=INTEGER},
      </if>
      <if test="lastBigSmallGap != null">
        #{lastBigSmallGap,jdbcType=INTEGER},
      </if>
      <if test="fourthOddGap != null">
        #{fourthOddGap,jdbcType=INTEGER},
      </if>
      <if test="fourthEvenGap != null">
        #{fourthEvenGap,jdbcType=INTEGER},
      </if>
      <if test="fourthBigGap != null">
        #{fourthBigGap,jdbcType=INTEGER},
      </if>
      <if test="fourthSmallGap != null">
        #{fourthSmallGap,jdbcType=INTEGER},
      </if>
      <if test="fourthPrimeGap != null">
        #{fourthPrimeGap,jdbcType=INTEGER},
      </if>
      <if test="fourthCompositeGap != null">
        #{fourthCompositeGap,jdbcType=INTEGER},
      </if>
      <if test="fourthEvenOddGap != null">
        #{fourthEvenOddGap,jdbcType=INTEGER},
      </if>
      <if test="fourthBigSmallGap != null">
        #{fourthBigSmallGap,jdbcType=INTEGER},
      </if>
      <if test="bigBigGap != null">
        #{bigBigGap,jdbcType=INTEGER},
      </if>
      <if test="bigSmallGap != null">
        #{bigSmallGap,jdbcType=INTEGER},
      </if>
      <if test="bigOddGap != null">
        #{bigOddGap,jdbcType=INTEGER},
      </if>
      <if test="bigEvenGap != null">
        #{bigEvenGap,jdbcType=INTEGER},
      </if>
      <if test="smallBigGap != null">
        #{smallBigGap,jdbcType=INTEGER},
      </if>
      <if test="smallSmallGap != null">
        #{smallSmallGap,jdbcType=INTEGER},
      </if>
      <if test="smallOddGap != null">
        #{smallOddGap,jdbcType=INTEGER},
      </if>
      <if test="smallEvenGap != null">
        #{smallEvenGap,jdbcType=INTEGER},
      </if>
      <if test="oddBigGap != null">
        #{oddBigGap,jdbcType=INTEGER},
      </if>
      <if test="oddSmallGap != null">
        #{oddSmallGap,jdbcType=INTEGER},
      </if>
      <if test="oddOddGap != null">
        #{oddOddGap,jdbcType=INTEGER},
      </if>
      <if test="oddEvenGap != null">
        #{oddEvenGap,jdbcType=INTEGER},
      </if>
      <if test="evenBigGap != null">
        #{evenBigGap,jdbcType=INTEGER},
      </if>
      <if test="evenSmallGap != null">
        #{evenSmallGap,jdbcType=INTEGER},
      </if>
      <if test="evenOddGap != null">
        #{evenOddGap,jdbcType=INTEGER},
      </if>
      <if test="evenEvenGap != null">
        #{evenEvenGap,jdbcType=INTEGER},
      </if>
      <if test="lastZeroGap != null">
        #{lastZeroGap,jdbcType=INTEGER},
      </if>
      <if test="lastOneGap != null">
        #{lastOneGap,jdbcType=INTEGER},
      </if>
      <if test="lastTwoGap != null">
        #{lastTwoGap,jdbcType=INTEGER},
      </if>
      <if test="lastThreeGap != null">
        #{lastThreeGap,jdbcType=INTEGER},
      </if>
      <if test="lastFourGap != null">
        #{lastFourGap,jdbcType=INTEGER},
      </if>
      <if test="lastFiveGap != null">
        #{lastFiveGap,jdbcType=INTEGER},
      </if>
      <if test="lastSixGap != null">
        #{lastSixGap,jdbcType=INTEGER},
      </if>
      <if test="lastSevenGap != null">
        #{lastSevenGap,jdbcType=INTEGER},
      </if>
      <if test="lastEightGap != null">
        #{lastEightGap,jdbcType=INTEGER},
      </if>
      <if test="lastNineGap != null">
        #{lastNineGap,jdbcType=INTEGER},
      </if>
      <if test="spanNineGap != null">
        #{spanNineGap,jdbcType=INTEGER},
      </if>
      <if test="roadZeroGap != null">
        #{roadZeroGap,jdbcType=INTEGER},
      </if>
      <if test="roadOneGap != null">
        #{roadOneGap,jdbcType=INTEGER},
      </if>
      <if test="roadTwoGap != null">
        #{roadTwoGap,jdbcType=INTEGER},
      </if>
      <if test="zeroZeroGap != null">
        #{zeroZeroGap,jdbcType=INTEGER},
      </if>
      <if test="oneOneGap != null">
        #{oneOneGap,jdbcType=INTEGER},
      </if>
      <if test="twoTwoGap != null">
        #{twoTwoGap,jdbcType=INTEGER},
      </if>
      <if test="threeThreeGap != null">
        #{threeThreeGap,jdbcType=INTEGER},
      </if>
      <if test="fourFourGap != null">
        #{fourFourGap,jdbcType=INTEGER},
      </if>
      <if test="fiveFiveGap != null">
        #{fiveFiveGap,jdbcType=INTEGER},
      </if>
      <if test="sixSixGap != null">
        #{sixSixGap,jdbcType=INTEGER},
      </if>
      <if test="sevenSevenGap != null">
        #{sevenSevenGap,jdbcType=INTEGER},
      </if>
      <if test="eightEightGap != null">
        #{eightEightGap,jdbcType=INTEGER},
      </if>
      <if test="nineNineGap != null">
        #{nineNineGap,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wzk.mvc.model.MyOpenballInfo">
    update my_openball_info
    <set>
      <if test="expect != null">
        expect = #{expect,jdbcType=BIGINT},
      </if>
      <if test="opendate != null">
        opendate = #{opendate,jdbcType=BIGINT},
      </if>
      <if test="opencode != null">
        opencode = #{opencode,jdbcType=VARCHAR},
      </if>
      <if test="firstcode != null">
        firstcode = #{firstcode,jdbcType=INTEGER},
      </if>
      <if test="secondcode != null">
        secondcode = #{secondcode,jdbcType=INTEGER},
      </if>
      <if test="thirdcode != null">
        thirdcode = #{thirdcode,jdbcType=INTEGER},
      </if>
      <if test="fourthcode != null">
        fourthcode = #{fourthcode,jdbcType=INTEGER},
      </if>
      <if test="lastcode != null">
        lastcode = #{lastcode,jdbcType=INTEGER},
      </if>
      <if test="lastOddGap != null">
        last_odd_gap = #{lastOddGap,jdbcType=INTEGER},
      </if>
      <if test="lastEvenGap != null">
        last_even_gap = #{lastEvenGap,jdbcType=INTEGER},
      </if>
      <if test="lastBigGap != null">
        last_big_gap = #{lastBigGap,jdbcType=INTEGER},
      </if>
      <if test="lastSmallGap != null">
        last_small_gap = #{lastSmallGap,jdbcType=INTEGER},
      </if>
      <if test="lastPrimeGap != null">
        last_prime_gap = #{lastPrimeGap,jdbcType=INTEGER},
      </if>
      <if test="lastCompositeGap != null">
        last_composite_gap = #{lastCompositeGap,jdbcType=INTEGER},
      </if>
      <if test="lastEvenOddGap != null">
        last_even_odd_gap = #{lastEvenOddGap,jdbcType=INTEGER},
      </if>
      <if test="lastBigSmallGap != null">
        last_big_small_gap = #{lastBigSmallGap,jdbcType=INTEGER},
      </if>
      <if test="fourthOddGap != null">
        fourth_odd_gap = #{fourthOddGap,jdbcType=INTEGER},
      </if>
      <if test="fourthEvenGap != null">
        fourth_even_gap = #{fourthEvenGap,jdbcType=INTEGER},
      </if>
      <if test="fourthBigGap != null">
        fourth_big_gap = #{fourthBigGap,jdbcType=INTEGER},
      </if>
      <if test="fourthSmallGap != null">
        fourth_small_gap = #{fourthSmallGap,jdbcType=INTEGER},
      </if>
      <if test="fourthPrimeGap != null">
        fourth_prime_gap = #{fourthPrimeGap,jdbcType=INTEGER},
      </if>
      <if test="fourthCompositeGap != null">
        fourth_composite_gap = #{fourthCompositeGap,jdbcType=INTEGER},
      </if>
      <if test="fourthEvenOddGap != null">
        fourth_even_odd_gap = #{fourthEvenOddGap,jdbcType=INTEGER},
      </if>
      <if test="fourthBigSmallGap != null">
        fourth_big_small_gap = #{fourthBigSmallGap,jdbcType=INTEGER},
      </if>
      <if test="bigBigGap != null">
        big_big_gap = #{bigBigGap,jdbcType=INTEGER},
      </if>
      <if test="bigSmallGap != null">
        big_small_gap = #{bigSmallGap,jdbcType=INTEGER},
      </if>
      <if test="bigOddGap != null">
        big_odd_gap = #{bigOddGap,jdbcType=INTEGER},
      </if>
      <if test="bigEvenGap != null">
        big_even_gap = #{bigEvenGap,jdbcType=INTEGER},
      </if>
      <if test="smallBigGap != null">
        small_big_gap = #{smallBigGap,jdbcType=INTEGER},
      </if>
      <if test="smallSmallGap != null">
        small_small_gap = #{smallSmallGap,jdbcType=INTEGER},
      </if>
      <if test="smallOddGap != null">
        small_odd_gap = #{smallOddGap,jdbcType=INTEGER},
      </if>
      <if test="smallEvenGap != null">
        small_even_gap = #{smallEvenGap,jdbcType=INTEGER},
      </if>
      <if test="oddBigGap != null">
        odd_big_gap = #{oddBigGap,jdbcType=INTEGER},
      </if>
      <if test="oddSmallGap != null">
        odd_small_gap = #{oddSmallGap,jdbcType=INTEGER},
      </if>
      <if test="oddOddGap != null">
        odd_odd_gap = #{oddOddGap,jdbcType=INTEGER},
      </if>
      <if test="oddEvenGap != null">
        odd_even_gap = #{oddEvenGap,jdbcType=INTEGER},
      </if>
      <if test="evenBigGap != null">
        even_big_gap = #{evenBigGap,jdbcType=INTEGER},
      </if>
      <if test="evenSmallGap != null">
        even_small_gap = #{evenSmallGap,jdbcType=INTEGER},
      </if>
      <if test="evenOddGap != null">
        even_odd_gap = #{evenOddGap,jdbcType=INTEGER},
      </if>
      <if test="evenEvenGap != null">
        even_even_gap = #{evenEvenGap,jdbcType=INTEGER},
      </if>
      <if test="lastZeroGap != null">
        last_zero_gap = #{lastZeroGap,jdbcType=INTEGER},
      </if>
      <if test="lastOneGap != null">
        last_one_gap = #{lastOneGap,jdbcType=INTEGER},
      </if>
      <if test="lastTwoGap != null">
        last_two_gap = #{lastTwoGap,jdbcType=INTEGER},
      </if>
      <if test="lastThreeGap != null">
        last_three_gap = #{lastThreeGap,jdbcType=INTEGER},
      </if>
      <if test="lastFourGap != null">
        last_four_gap = #{lastFourGap,jdbcType=INTEGER},
      </if>
      <if test="lastFiveGap != null">
        last_five_gap = #{lastFiveGap,jdbcType=INTEGER},
      </if>
      <if test="lastSixGap != null">
        last_six_gap = #{lastSixGap,jdbcType=INTEGER},
      </if>
      <if test="lastSevenGap != null">
        last_seven_gap = #{lastSevenGap,jdbcType=INTEGER},
      </if>
      <if test="lastEightGap != null">
        last_eight_gap = #{lastEightGap,jdbcType=INTEGER},
      </if>
      <if test="lastNineGap != null">
        last_nine_gap = #{lastNineGap,jdbcType=INTEGER},
      </if>
      <if test="spanNineGap != null">
        span_nine_gap = #{spanNineGap,jdbcType=INTEGER},
      </if>
      <if test="roadZeroGap != null">
        road_zero_gap = #{roadZeroGap,jdbcType=INTEGER},
      </if>
      <if test="roadOneGap != null">
        road_one_gap = #{roadOneGap,jdbcType=INTEGER},
      </if>
      <if test="roadTwoGap != null">
        road_two_gap = #{roadTwoGap,jdbcType=INTEGER},
      </if>
      <if test="zeroZeroGap != null">
        zero_zero_gap = #{zeroZeroGap,jdbcType=INTEGER},
      </if>
      <if test="oneOneGap != null">
        one_one_gap = #{oneOneGap,jdbcType=INTEGER},
      </if>
      <if test="twoTwoGap != null">
        two_two_gap = #{twoTwoGap,jdbcType=INTEGER},
      </if>
      <if test="threeThreeGap != null">
        three_three_gap = #{threeThreeGap,jdbcType=INTEGER},
      </if>
      <if test="fourFourGap != null">
        four_four_gap = #{fourFourGap,jdbcType=INTEGER},
      </if>
      <if test="fiveFiveGap != null">
        five_five_gap = #{fiveFiveGap,jdbcType=INTEGER},
      </if>
      <if test="sixSixGap != null">
        six_six_gap = #{sixSixGap,jdbcType=INTEGER},
      </if>
      <if test="sevenSevenGap != null">
        seven_seven_gap = #{sevenSevenGap,jdbcType=INTEGER},
      </if>
      <if test="eightEightGap != null">
        eight_eight_gap = #{eightEightGap,jdbcType=INTEGER},
      </if>
      <if test="nineNineGap != null">
        nine_nine_gap = #{nineNineGap,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wzk.mvc.model.MyOpenballInfo">
    update my_openball_info
    set expect = #{expect,jdbcType=BIGINT},
      opendate = #{opendate,jdbcType=BIGINT},
      opencode = #{opencode,jdbcType=VARCHAR},
      firstcode = #{firstcode,jdbcType=INTEGER},
      secondcode = #{secondcode,jdbcType=INTEGER},
      thirdcode = #{thirdcode,jdbcType=INTEGER},
      fourthcode = #{fourthcode,jdbcType=INTEGER},
      lastcode = #{lastcode,jdbcType=INTEGER},
      last_odd_gap = #{lastOddGap,jdbcType=INTEGER},
      last_even_gap = #{lastEvenGap,jdbcType=INTEGER},
      last_big_gap = #{lastBigGap,jdbcType=INTEGER},
      last_small_gap = #{lastSmallGap,jdbcType=INTEGER},
      last_prime_gap = #{lastPrimeGap,jdbcType=INTEGER},
      last_composite_gap = #{lastCompositeGap,jdbcType=INTEGER},
      last_even_odd_gap = #{lastEvenOddGap,jdbcType=INTEGER},
      last_big_small_gap = #{lastBigSmallGap,jdbcType=INTEGER},
      fourth_odd_gap = #{fourthOddGap,jdbcType=INTEGER},
      fourth_even_gap = #{fourthEvenGap,jdbcType=INTEGER},
      fourth_big_gap = #{fourthBigGap,jdbcType=INTEGER},
      fourth_small_gap = #{fourthSmallGap,jdbcType=INTEGER},
      fourth_prime_gap = #{fourthPrimeGap,jdbcType=INTEGER},
      fourth_composite_gap = #{fourthCompositeGap,jdbcType=INTEGER},
      fourth_even_odd_gap = #{fourthEvenOddGap,jdbcType=INTEGER},
      fourth_big_small_gap = #{fourthBigSmallGap,jdbcType=INTEGER},
      big_big_gap = #{bigBigGap,jdbcType=INTEGER},
      big_small_gap = #{bigSmallGap,jdbcType=INTEGER},
      big_odd_gap = #{bigOddGap,jdbcType=INTEGER},
      big_even_gap = #{bigEvenGap,jdbcType=INTEGER},
      small_big_gap = #{smallBigGap,jdbcType=INTEGER},
      small_small_gap = #{smallSmallGap,jdbcType=INTEGER},
      small_odd_gap = #{smallOddGap,jdbcType=INTEGER},
      small_even_gap = #{smallEvenGap,jdbcType=INTEGER},
      odd_big_gap = #{oddBigGap,jdbcType=INTEGER},
      odd_small_gap = #{oddSmallGap,jdbcType=INTEGER},
      odd_odd_gap = #{oddOddGap,jdbcType=INTEGER},
      odd_even_gap = #{oddEvenGap,jdbcType=INTEGER},
      even_big_gap = #{evenBigGap,jdbcType=INTEGER},
      even_small_gap = #{evenSmallGap,jdbcType=INTEGER},
      even_odd_gap = #{evenOddGap,jdbcType=INTEGER},
      even_even_gap = #{evenEvenGap,jdbcType=INTEGER},
      last_zero_gap = #{lastZeroGap,jdbcType=INTEGER},
      last_one_gap = #{lastOneGap,jdbcType=INTEGER},
      last_two_gap = #{lastTwoGap,jdbcType=INTEGER},
      last_three_gap = #{lastThreeGap,jdbcType=INTEGER},
      last_four_gap = #{lastFourGap,jdbcType=INTEGER},
      last_five_gap = #{lastFiveGap,jdbcType=INTEGER},
      last_six_gap = #{lastSixGap,jdbcType=INTEGER},
      last_seven_gap = #{lastSevenGap,jdbcType=INTEGER},
      last_eight_gap = #{lastEightGap,jdbcType=INTEGER},
      last_nine_gap = #{lastNineGap,jdbcType=INTEGER},
      span_nine_gap = #{spanNineGap,jdbcType=INTEGER},
      road_zero_gap = #{roadZeroGap,jdbcType=INTEGER},
      road_one_gap = #{roadOneGap,jdbcType=INTEGER},
      road_two_gap = #{roadTwoGap,jdbcType=INTEGER},
      zero_zero_gap = #{zeroZeroGap,jdbcType=INTEGER},
      one_one_gap = #{oneOneGap,jdbcType=INTEGER},
      two_two_gap = #{twoTwoGap,jdbcType=INTEGER},
      three_three_gap = #{threeThreeGap,jdbcType=INTEGER},
      four_four_gap = #{fourFourGap,jdbcType=INTEGER},
      five_five_gap = #{fiveFiveGap,jdbcType=INTEGER},
      six_six_gap = #{sixSixGap,jdbcType=INTEGER},
      seven_seven_gap = #{sevenSevenGap,jdbcType=INTEGER},
      eight_eight_gap = #{eightEightGap,jdbcType=INTEGER},
      nine_nine_gap = #{nineNineGap,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectOneByExpect" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from my_openball_info
    where expect = #{expect,jdbcType=BIGINT}
  </select>

  <select id="selectOneByLast" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from my_openball_info
   order by id desc limit 1
  </select>
  
</mapper>